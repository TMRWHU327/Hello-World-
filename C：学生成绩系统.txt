#include "stdio.h"
#include "stdlib.h"
#include "string.h"
#include "conio.h"
#define HEADER1 "--------------------------------ZGGZ---------------------------------  \n"
#define HEADER2 "| number | name |   jbgz   |  jj  |  kk  | yfgz |  sk  | sfgz |  \n"
#define HEADER3 "|--------|------------|--------|--------|--------|--------|--------|--------|  \n"
#define FORMAT "|%-8s|%-10s |%8.2f|%8.2f|%8.2f|%8.2f|%8.2f|%8.2f| \n"
#define DATA     p->num,p->name,p->jbgz,p->jj,p->kk,p->yfgz,p->sk,p->sfgz
#define END     "---------------------------------------------------------------------  \n"
#define N 60
int saveflag=0;
typedef struct employee
{
char num[10];
char name[15];
float jbgz;
float jj;
float kk;
float yfgz;
float sk;
float sfgz;
}ZGGZ;

void main(void)
{
ZGGZ gz[N];
FILE *fp;
int select;
char ch;
int count=0;

fp=fopen("C:\\zggz","ab+");

if(fp==NULL)
{
printf("\n=====>can not open file!\n");
exit(0);
}
while (!feof(fp))
{
if(fread(&gz[count],sizeof(ZGGZ),1,fp)==1)
count++;
}
fclose(fp);
printf("\n==>open file sucess, the total records number is: %d.\n",count);
getchar();
menu();
while(1)
{
system("cls");
menu();
printf("\n                Please Enter your choice(0~9):");
scanf("%d",&select);
if(select==0)
{
if(saveflag==1)
{
getchar();
printf("\n==>Whether save modified record t file?(y/n);");
scanf("%c",ch);
if(ch=='y'||ch=='Y')
Save(gz,count);
}
printf("\n===>thank you for useness!");
getchar();
break;
}
switch(select)
{
case 1 : count=Add(gz,count);break;
case 2 : count=Del(gz,count);break;
case 3 : Qur(gz,count);break;
case 4 : Modify(gz,count);break;
case 5 : count=(gz,count);break;
case 6 : Tongji(gz,count);break;
case 7 : Sort(gz,count);break;
case 8 : Save(gz,count);break;
case 9 : system("cls");Disp(gz,count);break;
default : Wrong();getchar();break;
}
}
}

void menu(void)
{
system("cls");
textcolor(10);
gotoxy(10,5);
cprintf("                   The Students' Grade Management System  \n");
gotoxy(10,8);
cprintf("*************************Menu**************************** \n");
gotoxy(10,9);
cprintf("          *  1  input   record       2  delete record       *\n");
gotoxy(10,10);
cprintf("          *  3  search  record       4  modify record       *\n");
gotoxy(10,11);
cprintf("          *  5  insert  record       6  count  record       *\n");
gotoxy(10,12);
cprintf("          *  7  sort    record       8  save   record       *\n");
gotoxy(10,13);
cprintf("          *  9  display record       0  quit   system       *\n");
gotoxy(10,14);
cprintf("********************************************************* \n");

}

void printheader(void)
{
printf(HEADER1);
printf(HEADER2);
printf(HEADER3);
}

void printfdata(ZGGZ pp)
{
	ZGGZ* p;
	p=&pp;
	printf(FORMAT,DATA);

}

void Disp(ZGGZ tp[],int n)
{
int i;
if(n==0)
{
printf("\n=====>Not employee record!\n");
getchar();
return;
}
printf("\n\n");
printfheader();
i=0;
while(i<n)
{
printdata(tp[i]);
i++;
printf(HEADER3);
}
getchar();
}
 void Wrong(void)
 {
 printf("\n\n\n\n\n*********Error:input has wrong! press any key to continue*********\n");
 getchar();
 }

 void Nofind()
 {
 printf("\n=====>Not fine this employee record!\n");
 }

 int Locate(ZGGZ tp[], int n, char findmess[],char nameornum[])
 {
 int i=0;
 if(strcmp(nameornum,"num")==0)
 {
 while(i<n)
 {
 if(strcmp(tp[i].num,findmess)==0)
 return i;
 i++;
 }
 }
 else if(strcmp(nameornum,"name")==0)
 {
 while(i<n)
 {
 if(strcmp(tp[i].name,findmess)==0)
 return i;
 i++;
 }
 }
 return -1;
 }

 void srtinginput(void)
 {
 char n[255];
 do
 {
 printf(notice);
 scanf("%s",n);
 if(strlen(n)>lens) printf("\n exceed the required length! \n");
 }
 while(strlen(n)>lens);
 strcpy(t,n);
 }
 float numberinput(char *notice)
 {
 float t=0.00;
 do
 {
 printf(notice);
 scanf("%f",&t);
 if(t<0) printf("\n score must >=0 ! \n");
 }while(t<0);
 return t;

 }

 int Add(ZGGZ tp[],int n)
 {
 char c,num[10];
 int i,flag=0;
 system("cls");
 Disp(tp,n);
 while(1)
 {
 while(1)
 {
 stringinput(num,10,"input number(press '0'return menu):");
 flag=0;
 if(strcmp(num,"0")==0)
 {return n;}
 i=0;
 while(i<n)
 {
 if(strcmp(tp[i].num,num)==0)
 {
 flag=1;
 break;
 }
 i++;
 }
 
 if(flag==1)
 {
 getchar();
 printf("==>The number  %s  is existing,try again?(y/n): ",num);
 scanf("%c",ch);
 if(ch=='y'||ch=='Y')
 continue;
 else 
 return n;
 }
 else
 {break;}
 }
 strcpy(tp[n].num,num);
 stringinput(tp[n].name,15,"Name");
 tp[n].jbgz=numberinput("jbgz:");
 tp[n].jj=numberinput("jiangjin:");
 tp[n].kk=numberinput("koukuan:");
 tp[n].yfgz=tp[n].jpgz+tp[n].jj-tp[n].kk;
 tp[n].sk=tp[n].yfgz*0.12;
 tp[n].sfgz=tp[n].yfgz-tp[n].sk;
 saveflag=1;
 n++;
 }
 return n;
 }


void Qur(ZGGZ tp[], int n)
{
int select;
char searchinput[20];
int p=0;
if(n<=0)
{
system("cls");
printf("\n=====>No employee record!\n");
getchar();
return ;

}
system("cls");
printf("\n     ======>1 Search by number  =====>2 Search by name\n");
printf("      please choice[1,2]:");
scanf("%d",&select);
if(select==1)
{
stringinput(searchinput,10,"input the existing employee number:");
p=Locate(tp,n,searchinput,"num");
if(p!=-1)
{
printheader();
printdata(tp[p]);
printf(END);
printf("press any key to return ");
getchar();
}
else
Nofind();
getchar();
}
else if(select==2)
{
stringinput(searchinput,15,"input the existing employee name:");
p=Locate(tp,n,searchinput,"name");
if(p!=-1)
{
printheader();
printdata(tp[p]);
printf(END);
printf("press any key to return");
getchar();
}
else
Nofind();
getchar();
}
else
Wrong();
getchar();
}

int Del(ZGGZ tp[],int n)
{
int sel;
char findmess[20];
int p=0,i=0;
if(n<=0)
{
system("cls");
printf("\n=====>No employee record!\n");
getchar();
return n;
}
system("cls");
Disp(tp,n);
printf("\n     =====>1 Delete by number         =====>2 Delete by name\n");
printf("      please choice[1,2]:");
scanf("%d",&sel);
if(sel==1)
{
stringinput(findmess,10,"input the existing employee number:");
p=Locate(tp,n,findmess,"num");
getchar();
if(p!=-1)
{
for(i=p+1;i<n;i++)
{
strcpy(tp[i-1].num,tp[i].num);
strcpy(tp[i-1].name,tp[i].name);
tp[i-1].jbgz=tp[i].jbgz;
tp[i-1].jj=tp[i].jj;
tp[i-1].kk=tp[i].kk;
tp[i-1].yfgz=tp[i].yfgz;
tp[i-1].jbgz=tp[i].sk;
tp[i-1].sfgz=tp[i].sfgz;
}
printf("\n==>delete success!\n");
n--;
getchar();
saveflag=1;
}
else
Nofind();
getchar();
}
else if(sel==2)
{
stringinput(finemess,15,"input the existing employee name:");
p=Locate(tp,n,findmess,"name");
getchar();
if(p!=-1)
{
for(i=p+1;i<n;i++)
{
strcpy(tp[i-1].num,tp[i].num);
strcpy(tp[i-1].name,tp[i].name);
tp[i-1].jbgz=tp[i].jbgz;
tp[i-1].jj=tp[i].jj;
tp[i-1].kk=tp[i].kk;
tp[i-1].yfgz=tp[i].yfgz;
tp[i-1].jbgz=tp[i].sk;
tp[i-1].sfgz=tp[i].sfgz;
}
pritnf("\n=====>delete success!\n");
n--;
getchar();
saveflag=1;
}
else
Nofind();
getchar();
}
return n;
}


void Modify(void)
{
char findmess[20];
int p=0;
if(n<=0)
{
system("cls");
pritnf("\n=====>No employee record!\n");
getchar();
return ;
}
system("cls");
printf("modify employee recorder");
Disp(tp,n);
stringinput(findmess,10,"input the existing employee number:");
p=Locate(tp,n,findmess,"num");
if(p!=-1)
{
printf("Number:%s,\n",tp[p].num);
printf("Name:%s",tp[p].name);
stringinput(tp[p].name,15,"input new name:");

printf("jbgz:%8.2f,",tp[p].jbgz);
tp[p].jbgz=numberinput("jbgz:");

printf("jiangjin:%8.2f,",tp[p].jj);
tp[p].jj=numberinput("jiangjin:");

printf("koukuan:%8.2f,",tp[p].kk);
tp[p].kk=numberinput("koukuan:");

tp[n].yfgz=tp[n].jbgz+tp[n].jj-tp[n].kk;
tp[n].sk=tp[n].yfgz*0.12;
tp[n].sfgz=tp[n].yfgz-tp[n].sk;
printf("\n=====>modify success!\n");
getchar();
Disp(tp,n);
getchar();
saveflag=1;
}
else
{
Nofind();
getchar();
}
return ;
}

int Insert(ZGGZ tp[], int n)
{
char ch,num[10],s[10];
ZGGZ newinfo;
int flag=0,i=0,kkk=0;
system("cls");
Disp(tp,n);
while(1
{
stringinput(s,10,"please input insert location after the Number:");
flag=0;i=0;
while(i<n)

{
if(strcmp(tp[i].num,s)==0)
{kkk=i;flag=1;break;}
i++;
}
if(flag==1)
break;
else
{
getchar();
printf("\n=====>The number %s is not existing,try again?(y/n):",s);
scanf("%c",&ch);
if(ch=='y'||ch=='Y')
{continue;}
else
{return n;}
}
}
while(1)
{
stringinput(num,10,"input new employee Number:");
i=0;flag=0;
while(i<n)
{
if(strcmp(tp[i].num,num)==0)
{flag=1;break;}
i++;
}
if(flag==1)
{
getchar();
printf("\n=====>Sorry,The number %s is existing,try again?(y/n):",num);
scanf("%c",&ch);
if(ch=='y'||ch=='Y')
{continue;}
else
{return n;}


}
else
break;
}

strcmp(newinfo.num,num);
stringinput(newinfo.num,15,"Name:");
newinfo.jbgz=munberinput("jbgz:");
newinfo.jj=numberinput("jiangjin:");
newinfo.kk=numberinput("koukuan:");
newinfo.yfgz=newinfo.jbgz+newinfo.jj-newinfo.kk;
newinfo.sk=newinfo.yfgz*0.12;
newinfo.sfgz=newinfo.yfgz-newinfo.sk;
saveflag=1;

for(i=n-1;i>kkk;i--)
{
strcpy(tp[i+1].num,tp[i].num);
strcpy(tp[i+1].name,tp[i].name);
tp[i+1].jbgz=tp[i].jbgz;
tp[i+1].jj=tp[i].jj;
tp[i+1].kk=tp[i].kk;
tp[i+1].yfgz=tp[i].yfgz;
tp[i+1].sk=tp[i].sk;
tp[i+1].sfgz=tp[i].sfgz;
}
strcpy(tp[kkk+1].num,newinfo.num);
strcpy(tp[kkk+1].name,newinfo.name);
tp[kkk+1].jbgz=newinfo.jbgz;
tp[kkk+1].jj=newinfo.jj;
tp[kkk+1].kk=newinfo.kk;
tp[kkk+1].yfgz=newinfo.yfgz;
tp[kkk+1].sk=newinfo.sk;
tp[kkk+1].sfgz=newinfo.sfgz;
n++;
Disp(tp,n);
printf("\n\n");
getchar();
return n;
}



void Tongji(ZGGZ tp[],int n)
{
int count10000=0,count5000=0,count2000=0,count0=0;
int i=0;
if(n<=0)
{
system("cls");
printf("\n=====>Not employee record!\n");
getchar();
return ;
}
system("cls");
Disp(tp,n);
i=0;
while(i<n)
{
if(tp[i].sfgz>=10000)
{count10000++;i=i+1;continue;}
if(tp[i].sfgz>=5000)
{count5000++;i=i+1;continue;}
if(tp[i].sfgz>=2000)
{count2000++;i=i+1;continue;}
if(tp[i].sfgz<2000)
{count0++;i=i+1;continue;}
}
printf("\n--------------------------the TongJi result----------------------------\n");
printf("sfgz>=     100000:%d (ren)\n",count10000);
printf("5000<=sfgz<10000:%d (ren)\n",count5000);
printf("2000<=sfgz<5000:%d (ren)\n",count2000);
printf("sfgz<     2000:%d (ren)\n",count0);
printf("-------------------------------------------------------------------------\n");
printf("\n\npress any key to return");
getchar();
}

void Sort(ZGGZ tp[],int n)
{
int i=0,j=0,flag=0;
ZGGZ newinfo;
if(n<=0)
{
system("cls");
printf("\n=====>Not employee record!\n");
getchar();
return ;
}
system("cls");
Disp(tp,n);
for(i=0;i<n;i++)
{
flag=0;
for(j=0;j<n-1;j++)
{
if((tp[j].sfgz<tp[j+1].sfgz))
{
flag=1;
strcpy(newinfo.num,tp[j].num);
strcpy(newinfo.name,tp[j].name);
newinfo.jfgz=tp[j].jfgz;
newinfo.jj=tp[j].jj;
newinfo.kk=tp[j].kk;
newinfo.yfgz=tp[j].yfgz;
newinfo.sk=tp[j].sk;
newinfo.sfgz=tp[j].sfgz;

strcpy(tp[j].num,tp[j+1].num);
strcpy(tp[j].name,tp[j+1].name);
tp[j].jbgz=tp[j+1].jbgz;
tp[j].jj}=tp[j+1].jj;
tp[j].kk=tp[j+1].kk;
tp[j].yfgz=tp[j+1].yfgz;
tp[j].sk=tp[j+1].sk;
tp[j].sfgz=tp[j+1].sfgz;

strcpy(tp[j+1].num,newinfo.num);
strcpy(tp[j+1].name,newinfo.name);
tp[j+1].jbgz=newinfo.jbgz;
tp[j+1].jj=newinfo.jj;
tp[j+1].kk=newinfo.kk;
tp[j+1].yfgz=newinfo.yfgz;
tp[j+1].sk=newinfo.sk;
tp[j+1].sfgz=newinfo.sfgz;
}
if(flag==0) break;

}
Disp(tp,n);
saveflah=1;
printf("\n     =====>sort complete!\n");
}

void Save(ZGGZ tp[],int n)
{
FILE* fp;
int i=0;
fp=fopen("c:\\zggz","wb");
if(fp==NULL)
{
printf("\n=====>open file error!\n");
getchar();
return;
}
for(i=0;i<n;i++)
{
if(fwrite(&tp[i],sizeof(ZGGZ),1,fp)==1)
{
continue;
}
else
{
break;
}

}
if(i>0)
{
getchar();
printf("\n\n=====>save file complete,total saved's record number is :%d\n",i);
getchar();
saveflag=0;
}
else
{
system("cls");
printf("the current link is empty,no employee record is saved!\n");
getchar();
}
fclose(fp);
}


